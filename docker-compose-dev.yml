services:
  mysql:
    build:
      context: ./mysql
      dockerfile: ./Dockerfile
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      TZ: Asia/Tokyo
    volumes:
        - db-data:/var/lib/mysql
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=mysql
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - "8000:80"
    networks:
      - app_network

  node:
    container_name: node
    build:
      context: ./node
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - mysql
    environment:
      - WATCHPACK_POLLING=true
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    driver: bridge

volumes:
  db-data:
